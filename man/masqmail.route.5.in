.TH masqmail.route 5 @RELEASE_DATE@ "@PACKAGE_STRING@" "File Formats"

.SH NAME
masqmail.route \- masqmail route configuration file


.SH DESCRIPTION

This man page describes the syntax of the route configuration files of
.MR masqmail 8 .
Their usual location is in
.IR @with_confdir@/ .

Mail will be sent with the SMTP protocol to its destination, unless
`pipe' is given.
In this case the message will be piped to the given program.


.SH ROUTE CONDITIONS

A message must pass all conditions to be allowed through a route.
Accordingly, matches from a deny list take precedence over matches
from the corresponding allow list.
Empty allow lists allow everything, just as empty deny lists do.

.TP
.BI "allowed_senders = " list

Messages whose envelope sender (return path) address appears in this
semicolon-separated list are allowed to use this route.

Glob patterns containing
.B ?
and
.B *
can be used.
The special item
.B <>
matches the null sender address
(which is used for failure notices and delivery notifications).
If the pattern does not contain an
.BR @ ,
it is seen as a pattern for the local part only, i.e.,
it matches any domain.

Example: \(lqmeillo;*@*example.org;web*@example.com\(rq

(\(lqmeillo\(rq equals \(lqmeillo@*\(rq, i.e., the local part.)

Note that while overriding the return path is a privileged operation on
the command line, incoming SMTP connections can use any valid-looking
address. Therefore, this option cannot be used for enforcing security.

.TP
.BI "denied_senders = " list

Messages whose envelope sender (return path) address appears in this
semicolon-separated list will not be sent using this route.

See
.B allowed_senders
for syntax and semantics.

.TP
.BI "allowed_recipients = " list

A semicolon-separated list of envelope recipient addresses to which mail
can be sent using this route.
This is useful for example if you use this route configuration when
connected to another LAN via PPP.
Glob patterns containing
.B ?
and
.B *
can be used.

Example: \(lq*@example.org;*@*foo.bar\(rq

.TP
.BI "denied_recipients = " list

Messages whose envelope recipient address appears in this
semicolon-separated list will not be sent using this route.
This is useful for example if you send mail directly
.RB ( mail_host
is not set) and you know of hosts that will not accept mail
from you because they use a dialup list (e.g.,
.BR https://www.spamhaus.org/blocklists/policy-blocklist/ ).

See
.B allowed_recipients
for syntax and semantics.

.TP
.BI "allowed_from_hdrs = " list

Messages whose \(lqFrom:\(rq address appears in this semicolon-separated
list are allowed to use this route.

Glob patterns containing
.B ?
and
.B *
can be used.
If the pattern does not contain an
.BR @ ,
it is seen as a pattern for the local part only.

Example: \(lqmeillo;*@*example.org;web*@example.com\(rq

(\(lqmeillo\(rq equals \(lqmeillo@*\(rq, i.e. the local part.)

The message sender can set the \(lqFrom:\(rq address arbitrarily,
so this is even less secure than the return path based options.

.TP
.BI "denied_from_hdrs = " list

Messages whose \(lqFrom:\(rq address appears in this semicolon-separated
list will not be sent using this route.

See
.B allowed_from_hdrs
for syntax and semantics.

.TP
.BI "last_route = " boolean

If this is set, a mail which would have been delivered using this route,
but has failed temporarily, will not be tried to be delivered using
subsequent routes.
This should be used if a particular route is the only acceptable one for
certain mails, and therefore a fallback to another (possibly unconditional)
route is not desirable.

Default is
.BR false .

.TP
.BI "connect_error_fail = " boolean

If this is set, a connection error (or if a pipe command could not be
executed) will cause a mail delivery to fail, i.e., the mail will be
bounced immediately.
If it is unset, the mail will be only deferred.

Default is
.BR false .
The reason for this is that masqmail is designed for non-permanent
internet connections, where such errors may occur quite often,
and bounces would be annoying.

You probably want to set this to
.BR true
for permanent routes.


.SH SMTP CONFIGURATION

.TP
.BI "mail_host = " string

All outgoing messages will be sent to this host (called a smarthost),
which will distribute them to their destinations.
If you do not set this, mails will be sent directly.

Due to SPAM prevention measures, direct delivery is noadays virtually
guaranteed to fail for anyone on \(lqdialupr\(rq (any connection with
a dynamic IP address).
Therefore, you should set this to your ISP's mail server.

You can optionally specify a port number following the host name
and a colon, e.g., mail_host=\(dqmail.foo.com:25\(dq.

.TP
.BI "resolve_list = " list

Specify the method how the domain of the server is resolved.
Possible values are dns_mx, dns_a, byname.
For `dns_mx', the domain is assumed to be an MX pointer to a list of host names,
these will be tried each in order
(lowest preference value first, equal preference values in random order).
For `dns_a', the domain is assumed to be an A pointer.
For `byname', the library function \fBgethostbyname(3)\fR will be used.

For routes to a local network, where you likely don't have a DNS service,
use only `byname'.

The default is "dns_mx;dns_a;byname".

.TP
.BI "helo_name = " string

Set the name given with the HELO/EHLO command. If this is not set,
\fBhost_name\fR from \fImasqmail.conf\fR will be used,
if the \fBdo_correct_helo\fR option (see below) is unset.

.TP
.BI "do_correct_helo = " boolean

If this is set, masqmail tries to look up your host name as it appears
on the internet and sends this in the HELO/EHLO command.
Some servers are so picky that they want this.
Which is really crazy.
It just does not make any sense to lie about ones own identity,
because it can always be looked up by the server.
Nobody should believe in the name given by HELO/EHLO anyway.
If this is not set, \fBhost_name\fR from \fImasqmail.conf\fR or as given with
the \fBhelo_name\fR (see above) will be used.

.TP
.BI "instant_helo = " boolean

If this is set, masqmail does not wait for the greeting of the SMTP server
after opening the connection.
Instead it says EHLO right away (ESMTP is assumed).
Use this option with wrappers that eat the 220 greeting of the SMTP server.
Common examples are STARTTLS wrappers, like `openssl s_client \-starttls smtp ...'.

If this option is set and a 220 greeting is received though,
everything should still work.
Please don't rely on that and keep in mind that RFC 2821 says that the client
SHOULD wait for the 220 greeting of the server.

Default: false

.TP
.BI "do_pipelining = " boolean

If this is set to false, masqmail will not use ESMTP PIPELINING,
even if the server announces that it is able to cope with it.
Default is true.

You do not want to set this to false unless the mail setup on the
remote server side is really broken.
Keywords: wingate.


.TP
.BI "auth_name = " string

Set the authentication type for ESMTP AUTH authentication.
Currently only `cram-md5' and `login' are supported.

.TP
.BI "auth_login = " string

Your account name for ESMTP AUTH authentication.

.TP
.BI "auth_secret = " string

Your secret for ESMTP AUTH authentication.

.TP
.BI "wrapper = " command

If set, instead of opening a connection to a remote server,
\fIcommand\fR will be called and all traffic will be piped to its stdin and from its stdout.
Purpose is to tunnel ip traffic, eg. for ssl.

Example for SMTP over SSL tunneling:
.nf
wrapper="/usr/bin/openssl s_client \-verify_return_error \-quiet \-connect mail.gmx.net:465 2>/dev/null"
.fi

SMTP over SSL is supported since masqmail-0.1.8.
It is marked obsolete by the IETF but is still in use.


Example for encryption with STARTTLS (RFC-3207):
.nf
# don't forget the instant_helo, otherwise it won't work
instant_helo=true
wrapper="/usr/bin/openssl s_client \-verify_return_error \-quiet \-starttls smtp \-connect mail.gmx.net:25 2>/dev/null"
.fi

This is supported since masqmail-0.2.28.
STARTTLS supersedes SMTP over SSL.

Note for openssl:
Ensure that stderr is redirected.
Do *not* use \-crlf in the wrapper command, because masqmail does already insert CRLF.
However, you might want to specify \-crlf if you want to test your wrapper command
interactively on the command line.


.SH PIPE CONFIGURATION

.TP
.BI "pipe = " command

\fIcommand\fR will be called and the message will be piped to its stdin.
Purpose is to use gateways to uucp, fax, sms or whatever else.

You can use variables to give as arguments to the command,
these are the same as for the MDA in the main configuration,
see
.MR masqmail.conf 5 .

.TP
.BI "pipe_fromline = " boolean

If this is set, a \(lqFrom\ \(rq line will be prepended to the message
whenever a pipe command is called.
Default is false.

.TP
.BI "pipe_fromhack = " boolean

If this is set, each line beginning with \(lqFrom\ \(rq is replaced
with \(lq>From\ \(rq whenever a pipe command is called.
You probably want this if you have set \fBpipe_fromline\fR above.
Default is false.


.SH ADDRESS REWRITE RULES

.TP
.BI "map_h_from_addresses = " list

Address rewrite rules for \(lqFrom:\(rq headers.
This is a semicolon-separated list of colon-separated key-value pairs.
The keys may contain glob patterns and are matched against the local
parts of email addresses.
The values are full RFC 822 compliant email addresses.
These may include angle brackets and a display name.

This is useful if you use private, externally unknown addresses inside
your LAN, and want them to be replaced by the publicly known addresses
when they go onto the internet.

Example:
.nf
map_h_from_addresses = \(dqjohn: John Smith <jsmith@mail.academic.edu>;
    charlie: Charlie Miller <cmiller@mx.commercial.com>\(dq
.fi

.TP
.BI "map_h_reply_to_addresses = " list

Same as \fBmap_h_from_addresses\fR, but for the `Reply-To:' header.

.TP
.BI "map_h_mail_followup_to_addresses = " list

Same as \fBmap_h_from_addresses\fR, but for the `Mail-Followup-To:' header.
Useful when replying to mailing lists.

.TP
.BI "map_return_path_addresses = " list

Rewrite rules for return-path (envelope from) addresses.
The syntax is the same as for the header rewrite rules above, except
that the values are RFC 821 email addresses.
Unlike RFC 822 addresses, these cannot include angle brackets and a
display name.

Bounce messages are sent to these addresses if something goes wrong.
Therefore, it is best to use the users' usual public addresses.
Additionally, some mail servers check whether the envelope matches the
reverse DNS lookup for the IP address the connection is coming from,
and even if the local part looks valid. If not, they reject the mail
because they suspect spamming. Further down, messages with mismatching
addresses may be quarantined or rejected due to DMARC policy.

Example:
.nf
map_return_path_addresses = \(dqjohn: jsmith@mail.academic.edu;
    charlie: cmiller@mx.commercial.com\(dq
.fi


.SH AUTHOR

Masqmail was written by Oliver Kurth,
and was subsequently maintained by Markus Schnalke.
The current maintainer is Oswald Buddenhagen.

You will find the newest version of masqmail at
.br
.B https://github.com/ossilator/masqmail


.SH BUGS

Please use the project's discussion board for questions, and its
issue tracker for bug reports and feature requests.

.SH SEE ALSO

.MR masqmail 8
.MR masqmail.conf 5
